{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Weather Playlist API",
    "description": "Documentation automatically generated by the <b>swagger.autogen</b> module."
  },
  "host": "localhost:4000",
  "basePath": "/api/v1/",
  "tags": [
    {
      "name": "Users",
      "description": "Endpoints"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {},
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/users/": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Creates a new User if one does not already exist.",
        "parameters": [
          {
            "name": "name",
            "in": "body",
            "description": "User name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "body",
            "description": "User email.",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "body",
            "description": "User password.",
            "required": true,
            "type": "string"
          },
          {
            "name": "personalNotes",
            "in": "body",
            "description": "User personal notes.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hometown",
            "in": "body",
            "description": "User hometown.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "User was successfully created.",
            "schema": {
              "type": "object",
              "properties": {},
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/CustomError"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/CustomError"
            }
          }
        }
      }
    },
    "/api/v1/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "User login with email and password.",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "User email.",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "body",
            "description": "User password.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON data",
            "schema": {
              "$ref": "#/definitions/LoggedInUser"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/CustomError"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/CustomError"
            }
          }
        }
      }
    },
    "/api/v1/users/forgot-password": {
      "patch": {
        "tags": [
          "Users"
        ],
        "description": "Request a new password.",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "User email.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Password has been reset and a recovery token has been sent to the email.",
            "schema": {
              "type": "object",
              "properties": {},
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/CustomError"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/CustomError"
            }
          }
        }
      }
    },
    "/api/v1/users/change-password": {
      "patch": {
        "tags": [
          "Users"
        ],
        "description": "Creates a new password from the token sent by email .",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "User email.",
            "required": true,
            "type": "string"
          },
          {
            "name": "newPassword",
            "in": "body",
            "description": "New User password.",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "body",
            "description": "Recovery password token.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The password was successfully changed",
            "schema": {
              "type": "object",
              "properties": {},
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/CustomError"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/CustomError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "LoggedInUser": {
      "type": "object",
      "properties": {
        "user": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "example": "denis.slapelis@gmail.com"
            },
            "name": {
              "type": "string",
              "example": "Denis Slapelis"
            },
            "hometown": {
              "type": "string",
              "example": "SÃ£o Paulo"
            }
          }
        },
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJkZW5pcy5zbGFwZWxpc0BnbWFpbC5jb20iLCJob21ldG93biI6IlPDo28gUGF1bG8iLCJpYXQiOjE2MTE2MTQzNTF9.2ATz5en61qEZgQ5tg6VVIkzHXz8CxHfY86FOJDKadCA"
        }
      }
    },
    "CustomError": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Error type"
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "stack": {
          "type": "string",
          "example": "If env var SHOW_STACK is true, the stacktrace of the error will be displayed, otherwise it will be null"
        }
      }
    }
  }
}